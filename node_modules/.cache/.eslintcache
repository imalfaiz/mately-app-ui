[{"C:\\Users\\moham\\OneDrive\\Desktop\\major-project\\src\\index.js":"1","C:\\Users\\moham\\OneDrive\\Desktop\\major-project\\src\\App.js":"2","C:\\Users\\moham\\OneDrive\\Desktop\\major-project\\src\\Navbar.jsx":"3","C:\\Users\\moham\\OneDrive\\Desktop\\major-project\\src\\Table.jsx":"4","C:\\Users\\moham\\OneDrive\\Desktop\\major-project\\src\\shared\\Button.js":"5","C:\\Users\\moham\\OneDrive\\Desktop\\major-project\\src\\shared\\Utils.js":"6","C:\\Users\\moham\\OneDrive\\Desktop\\major-project\\src\\shared\\Icons.js":"7","C:\\Users\\moham\\OneDrive\\Desktop\\major-project\\src\\Login.js":"8","C:\\Users\\moham\\OneDrive\\Desktop\\major-project\\src\\Admin.js":"9"},{"size":610,"mtime":1665907506549,"results":"10","hashOfConfig":"11"},{"size":3290,"mtime":1674113789531,"results":"12","hashOfConfig":"11"},{"size":913,"mtime":1665985953207,"results":"13","hashOfConfig":"11"},{"size":12236,"mtime":1665993246631,"results":"14","hashOfConfig":"11"},{"size":836,"mtime":1665834891126,"results":"15","hashOfConfig":"11"},{"size":92,"mtime":1665750674570,"results":"16","hashOfConfig":"11"},{"size":1217,"mtime":1665750657967,"results":"17","hashOfConfig":"11"},{"size":2163,"mtime":1665995453465,"results":"18","hashOfConfig":"11"},{"size":11525,"mtime":1665995497716,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"ywcvny",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},"C:\\Users\\moham\\OneDrive\\Desktop\\major-project\\src\\index.js",[],[],[],"C:\\Users\\moham\\OneDrive\\Desktop\\major-project\\src\\App.js",[],[],"C:\\Users\\moham\\OneDrive\\Desktop\\major-project\\src\\Navbar.jsx",[],[],"C:\\Users\\moham\\OneDrive\\Desktop\\major-project\\src\\Table.jsx",["50"],[],"import React from \"react\";\r\nimport {\r\n  useTable,\r\n  useFilters,\r\n  useGlobalFilter,\r\n  useAsyncDebounce,\r\n  useSortBy,\r\n  usePagination,\r\n} from \"react-table\";\r\nimport {\r\n  ChevronDoubleLeftIcon,\r\n  ChevronLeftIcon,\r\n  ChevronRightIcon,\r\n  ChevronDoubleRightIcon,\r\n} from \"@heroicons/react/solid\";\r\nimport { Button, PageButton } from \"./shared/Button.js\";\r\nimport { classNames } from \"./shared/Utils\";\r\nimport { SortIcon, SortUpIcon, SortDownIcon } from \"./shared/Icons\";\r\n\r\n// Define a default UI for filtering\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <label className=\"flex gap-x-2 items-baseline\">\r\n      <span className=\"text-gray-700\">Search: </span>\r\n      <input\r\n        type=\"text\"\r\n        className=\"rounded-md w-60 border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n        value={value || \"\"}\r\n        onChange={(e) => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder={`${count} records...`}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nexport function SelectColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id, render },\r\n}) {\r\n  // Calculate the options for filtering\r\n  // using the preFilteredRows\r\n  const options = React.useMemo(() => {\r\n    const options = new Set();\r\n    preFilteredRows.forEach((row) => {\r\n      options.add(row.values[id]);\r\n    });\r\n    return [...options.values()];\r\n  }, [id, preFilteredRows]);\r\n\r\n  // Render a multi-select box\r\n  return (\r\n    <label className=\"flex gap-x-2 items-baseline\">\r\n      <span className=\"text-gray-700\">{render(\"Header\")}: </span>\r\n      <select\r\n        className=\"rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n        name={id}\r\n        id={id}\r\n        value={filterValue}\r\n        onChange={(e) => {\r\n          setFilter(e.target.value || undefined);\r\n        }}\r\n      >\r\n        <option value=\"\">All</option>\r\n        {options.map((option, i) => (\r\n          <option key={i} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </label>\r\n  );\r\n}\r\n\r\nexport function SocialBtn({ value, column, row }) {\r\n  const status = value ? value.toLowerCase() : \"unknown\";\r\n\r\n  return (\r\n    <a\r\n      href={row.original[column.socialAccessor]}\r\n      target={\"_blank\"}\r\n      className={classNames(\r\n        \"btn border-none w-24 shadow-md\",\r\n        status.startsWith(\"linkedin\")\r\n          ? \"bg-[#0a66c2] text-[#fff] capitalize\"\r\n          : null,\r\n        status.startsWith(\"instagram\")\r\n          ? \"bg-[#c32aa3] text-[#fff] capitalize\"\r\n          : null,\r\n        status.startsWith(\"facebook\")\r\n          ? \"bg-[#3b5998] text-[#fff] capitalize\"\r\n          : null,\r\n        status.startsWith(\"twitter\")\r\n          ? \"bg-[#1da1f2] text-[#fff] capitalize\"\r\n          : null\r\n      )}\r\n    >\r\n      {status}\r\n    </a>\r\n  );\r\n}\r\n\r\nexport function AvatarCell({ value, column, row }) {\r\n  return (\r\n    <div className=\"flex items-center\">\r\n      <div className=\"mask mask-squircle w-12 h-12\">\r\n        <img className=\"\" src={row.original[column.imgAccessor]} alt=\"\" />\r\n      </div>\r\n      <div className=\"ml-4\">\r\n        <div className=\"text-md font-bold text-black\">{value}</div>\r\n        <div className=\"text-xs text-gray-500 opacity-50\">\r\n          {row.original[column.positionAccessor]}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CtcLpa({ value, column, row }) {\r\n  return <div className=\"text-sm text-gray-500\">{`${value} LPA`}</div>;\r\n}\r\n\r\nfunction Table({ columns, data }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page, // Instead of using 'rows', we'll use page,\r\n    // which has only the rows for the active page\r\n\r\n    // The rest of these things are super handy, too ;)\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n\r\n    state,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useFilters, // useFilters!\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination // new\r\n  );\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      <div className=\"sm:flex sm:gap-x-2\">\r\n        <GlobalFilter\r\n          preGlobalFilteredRows={preGlobalFilteredRows}\r\n          globalFilter={state.globalFilter}\r\n          setGlobalFilter={setGlobalFilter}\r\n        />\r\n        {headerGroups.map((headerGroup) =>\r\n          headerGroup.headers.map((column) =>\r\n            column.Filter ? (\r\n              <div className=\"mt-2 sm:mt-0\" key={column.id}>\r\n                {column.render(\"Filter\")}\r\n              </div>\r\n            ) : null\r\n          )\r\n        )}\r\n      </div>\r\n      {/* table */}\r\n      <div className=\"mt-4 flex flex-col\">\r\n        <div className=\"-my-2 overflow-x-auto -mx-4 sm:-mx-6 lg:-mx-8\">\r\n          <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n            <div className=\"drop-shadow-md overflow-hidden border-b border-gray-200 sm:rounded-lg\">\r\n              <table\r\n                {...getTableProps()}\r\n                className=\" min-w-full divide-y divide-gray-200\"\r\n              >\r\n                <thead className=\"bg-gray-50\">\r\n                  {headerGroups.map((headerGroup) => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                      {headerGroup.headers.map((column) => (\r\n                        // Add the sorting props to control sorting. For this example\r\n                        // we can add them into the header props\r\n                        <th\r\n                          scope=\"col\"\r\n                          className=\"group px-3 py-3 text-left text-xs text-black font-bold uppercase tracking-wider\"\r\n                          {...column.getHeaderProps(\r\n                            column.getSortByToggleProps()\r\n                          )}\r\n                        >\r\n                          <div className=\"flex items-center justify-between\">\r\n                            {column.render(\"Header\")}\r\n                            {/* Add a sort direction indicator */}\r\n                            <span>\r\n                              {column.isSorted ? (\r\n                                column.isSortedDesc ? (\r\n                                  <SortDownIcon className=\"w-4 h-4 text-gray-400\" />\r\n                                ) : (\r\n                                  <SortUpIcon className=\"w-4 h-4 text-gray-400\" />\r\n                                )\r\n                              ) : (\r\n                                <SortIcon className=\"w-4 h-4 text-gray-400 opacity-0 group-hover:opacity-100\" />\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n                        </th>\r\n                      ))}\r\n                    </tr>\r\n                  ))}\r\n                </thead>\r\n                <tbody\r\n                  {...getTableBodyProps()}\r\n                  className=\"bg-white divide-y divide-gray-200\"\r\n                >\r\n                  {page.map((row, i) => {\r\n                    // new\r\n                    prepareRow(row);\r\n                    return (\r\n                      <tr {...row.getRowProps()}>\r\n                        {row.cells.map((cell) => {\r\n                          return (\r\n                            <td\r\n                              {...cell.getCellProps()}\r\n                              className=\"px-4 py-4 whitespace-nowrap\"\r\n                              role=\"cell\"\r\n                            >\r\n                              {cell.column.Cell.name === \"defaultRenderer\" ? (\r\n                                <div className=\"text-sm text-gray-500\">\r\n                                  {cell.render(\"Cell\")}\r\n                                </div>\r\n                              ) : (\r\n                                cell.render(\"Cell\")\r\n                              )}\r\n                            </td>\r\n                          );\r\n                        })}\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Pagination */}\r\n      <div className=\"py-3 flex items-center justify-between\">\r\n        <div className=\"flex-1 flex justify-between sm:hidden\">\r\n          <Button\r\n            className=\"shadow-md border-none\"\r\n            onClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            Previous\r\n          </Button>\r\n          <Button\r\n            className=\"shadow-md border-none\"\r\n            onClick={() => nextPage()}\r\n            disabled={!canNextPage}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n        <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\r\n          <div className=\"flex gap-x-2 items-baseline\">\r\n            <span className=\"text-sm text-gray-700\">\r\n              Page <span className=\"font-medium\">{state.pageIndex + 1}</span> of{\" \"}\r\n              <span className=\"font-medium\">{pageOptions.length}</span>\r\n            </span>\r\n            <label>\r\n              <span className=\"sr-only\">Items Per Page</span>\r\n              <select\r\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n                value={state.pageSize}\r\n                onChange={(e) => {\r\n                  setPageSize(Number(e.target.value));\r\n                }}\r\n              >\r\n                {[5, 10, 20].map((pageSize) => (\r\n                  <option key={pageSize} value={pageSize}>\r\n                    Show {pageSize}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <nav\r\n              className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\"\r\n              aria-label=\"Pagination\"\r\n            >\r\n              <PageButton\r\n                className=\"rounded-l-md\"\r\n                onClick={() => gotoPage(0)}\r\n                disabled={!canPreviousPage}\r\n              >\r\n                <span className=\"sr-only\">First</span>\r\n                <ChevronDoubleLeftIcon\r\n                  className=\"h-5 w-5 text-gray-400\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              </PageButton>\r\n              <PageButton\r\n                onClick={() => previousPage()}\r\n                disabled={!canPreviousPage}\r\n              >\r\n                <span className=\"sr-only\">Previous</span>\r\n                <ChevronLeftIcon\r\n                  className=\"h-5 w-5 text-gray-400\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              </PageButton>\r\n              <PageButton onClick={() => nextPage()} disabled={!canNextPage}>\r\n                <span className=\"sr-only\">Next</span>\r\n                <ChevronRightIcon\r\n                  className=\"h-5 w-5 text-gray-400\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              </PageButton>\r\n              <PageButton\r\n                className=\"rounded-r-md\"\r\n                onClick={() => gotoPage(pageCount - 1)}\r\n                disabled={!canNextPage}\r\n              >\r\n                <span className=\"sr-only\">Last</span>\r\n                <ChevronDoubleRightIcon\r\n                  className=\"h-5 w-5 text-gray-400\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              </PageButton>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","C:\\Users\\moham\\OneDrive\\Desktop\\major-project\\src\\shared\\Button.js",[],[],"C:\\Users\\moham\\OneDrive\\Desktop\\major-project\\src\\shared\\Utils.js",[],[],"C:\\Users\\moham\\OneDrive\\Desktop\\major-project\\src\\shared\\Icons.js",[],[],"C:\\Users\\moham\\OneDrive\\Desktop\\major-project\\src\\Login.js",[],[],"C:\\Users\\moham\\OneDrive\\Desktop\\major-project\\src\\Admin.js",["51"],[],"import React, { useState } from \"react\";\r\n\r\nconst Admin = () => {\r\n   // our initial states\r\n const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n const [enteredPrice, setEnteredPrice] = useState(\"\");\r\n const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n // this function for get our title value from the user.\r\n function titleChangeHandler(event) {\r\n   setEnteredTitle(event.target.value);\r\n }\r\n // this function for get our price  value from the user.\r\n // price that we will get is string we have to convert it to number simply add + in front of the event.target.value like this +event.target.value\r\n function priceChangeHandler(event) {\r\n   setEnteredPrice(+event.target.value);\r\n }\r\n // this function for get our date value from the user.\r\n // don't forget we we will get it as string .\r\n function dateChangeHandler(event) {\r\n   setEnteredDate(event.target.value);\r\n }\r\n // here we will gather our data title, price, and date\r\n let expensesData = {\r\n   title: enteredTitle,\r\n   price: enteredPrice,\r\n   date: new Date(enteredDate), // we have to convert our date form string to date\r\n };\r\n // this function will clear our fields\r\n // we will call it inside submitFormHandler\r\n // after submit form we we will call submitFormHandler function and we will pass event as parameter to clearFields\r\n function clearFields(event) {\r\n   // we have to convert event.target to array\r\n   // we use from method to convert event.target to array\r\n   // after that we will use forEach function to go through every input to clear it\r\n   Array.from(event.target).forEach((e) => (e.value = \"\"));\r\n }\r\n // this function to submit form\r\n function submitFormHandler(event) {\r\n   // we don't want our page to refresh\r\n   event.preventDefault();\r\n    // print expenses data\r\n    console.log(expensesData)\r\n   // clear the fields\r\n   clearFields(event);\r\n   //update our states\r\n   // why we should update our states to empty string \r\n   // if we have not done it we clears the fields but we still have the data in our states\r\n   // if the  user submit the form without any data but our states still has the previous data\r\n   //update title\r\n   setEnteredTitle(\"\");\r\n   //update title\r\n   setEnteredPrice(\"\");\r\n   //update title\r\n   setEnteredDate(\"\");\r\n }\r\n  return (\r\n    <>\r\n      <div className=\"min-h-screen bg-gray-100 text-gray-900\">\r\n        <main className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\r\n          <div className=\"\">\r\n            <div className=\"navbar bg-base-100 drop-shadow-md rounded-lg \">\r\n              <div className=\"navbar-start\">\r\n                <a\r\n                  href=\"/\"\r\n                  aria-current=\"page\"\r\n                  aria-label=\"Homepage\"\r\n                  className=\"flex-0 btn btn-ghost px-2\"\r\n                >\r\n                  <div className=\"font-title text-primary inline-flex text-3xl transition-all duration-200\">\r\n                    <span className=\"capitalize\">mate</span>\r\n                    <span className=\"text-black capitalize\">Ly</span>\r\n                  </div>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Admin form  */}\r\n          <div className=\"my-6\">\r\n            <form onSubmit={submitFormHandler} className=\"bg-base-100 drop-shadow-md rounded-lg p-5 \">\r\n              {/* heading */}\r\n              <div>\r\n                <div className=\"text-lg md:text-xl font-bold\">\r\n                  Student Registration\r\n                </div>\r\n                {/* inputs  */}\r\n                <div className=\"my-3 flex flex-col justify-start flex-wrap md:flex-row\">\r\n                  <div className=\"flex flex-col m-3\">\r\n                    <label className=\"text-md md:text-sm\" for=\"name\">\r\n                      Student Name*\r\n                    </label>\r\n                    <input\r\n                    onChange={titleChangeHandler}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      cols=\"30\"\r\n                      rows=\"3\"\r\n                      required\r\n                      className=\"peer rounded-md input-sm border-gray-400 focus:ring focus:ring-indigo-200 focus:border-indigo-300 my-2 w-full max-w-xs \"\r\n                      // placeholder=\"Admin Id\"\r\n                    ></input>\r\n                  </div>\r\n                  <div className=\"flex flex-col m-3\">\r\n                    <label className=\"text-md md:text-sm\" for=\"role\">\r\n                      Role in Company*\r\n                    </label>\r\n                    <input\r\n                    onChange={titleChangeHandler}\r\n                      type=\"text\"\r\n                      name=\"role\"\r\n                      id=\"role\"\r\n                      cols=\"30\"\r\n                      rows=\"3\"\r\n                      required\r\n                      className=\"peer rounded-md input-sm border-gray-400 focus:ring focus:ring-indigo-200 focus:border-indigo-300 my-2 w-full max-w-xs \"\r\n                      // placeholder=\"Admin Id\"\r\n                    ></input>\r\n                  </div>\r\n\r\n                  <div className=\"flex flex-col m-3\">\r\n                    <label className=\"text-md md:text-sm\" for=\"company\">\r\n                      Company's Name*\r\n                    </label>\r\n                    <input\r\n                    onChange={titleChangeHandler}\r\n                      type=\"text\"\r\n                      name=\"company\"\r\n                      id=\"company\"\r\n                      cols=\"30\"\r\n                      rows=\"3\"\r\n                      required\r\n                      className=\"peer rounded-md input-sm border-gray-400 focus:ring focus:ring-indigo-200 focus:border-indigo-300 my-2 w-full max-w-xs \"\r\n                      // placeholder=\"Admin Id\"\r\n                    ></input>\r\n                  </div>\r\n                  <div className=\"flex flex-col m-3\">\r\n                    <label className=\"text-md md:text-sm\" for=\"department\">\r\n                      Department*\r\n                    </label>\r\n                    <input\r\n                    onChange={titleChangeHandler}\r\n                      type=\"text\"\r\n                      name=\"department\"\r\n                      id=\"department\"\r\n                      cols=\"30\"\r\n                      rows=\"3\"\r\n                      required\r\n                      className=\"peer rounded-md input-sm border-gray-400 focus:ring focus:ring-indigo-200 focus:border-indigo-300 my-2 w-full max-w-xs \"\r\n                      // placeholder=\"Admin Id\"\r\n                    ></input>\r\n                  </div>\r\n                  <div className=\"flex flex-col m-3\">\r\n                    <label className=\"text-md md:text-sm\" for=\"batch\">\r\n                      Year Batch*\r\n                    </label>\r\n                    <input\r\n                    onChange={priceChangeHandler}\r\n                      type=\"number\"\r\n                      name=\"batch\"\r\n                      id=\"batch\"\r\n                      cols=\"30\"\r\n                      rows=\"3\"\r\n                      required\r\n                      className=\"peer rounded-md input-sm border-gray-400 focus:ring focus:ring-indigo-200 focus:border-indigo-300 my-2 w-full max-w-xs \"\r\n                      // placeholder=\"Admin Id\"\r\n                    ></input>\r\n                  </div>\r\n                  <div className=\"flex flex-col m-3\">\r\n                    <label className=\"text-md md:text-sm\" for=\"branch\">\r\n                      Branch*\r\n                    </label>\r\n                    <input\r\n                    onChange={titleChangeHandler}\r\n                      type=\"text\"\r\n                      name=\"branch\"\r\n                      id=\"branch\"\r\n                      cols=\"30\"\r\n                      rows=\"3\"\r\n                      required\r\n                      className=\"peer rounded-md input-sm border-gray-400 focus:ring focus:ring-indigo-200 focus:border-indigo-300 my-2 w-full max-w-xs \"\r\n                      // placeholder=\"Admin Id\"\r\n                    ></input>\r\n                  </div>\r\n                  <div className=\"flex flex-col m-3\">\r\n                    <label className=\"text-md md:text-sm\" for=\"package\">\r\n                      Annual Package*\r\n                    </label>\r\n                    <input\r\n                    onChange={priceChangeHandler}\r\n                      type=\"number\"\r\n                      name=\"package\"\r\n                      id=\"package\"\r\n                      cols=\"30\"\r\n                      rows=\"3\"\r\n                      required\r\n                      className=\"peer rounded-md input-sm border-gray-400 focus:ring focus:ring-indigo-200 focus:border-indigo-300 my-2 w-full max-w-xs \"\r\n                      // placeholder=\"Admin Id\"\r\n                    ></input>\r\n                  </div>\r\n                  <div className=\"flex flex-col m-3\">\r\n                    <label className=\"text-md md:text-sm\" for=\"imgUrl\">\r\n                      Profile Image Url*\r\n                    </label>\r\n                    <input\r\n                    onChange={titleChangeHandler}\r\n                      type=\"url\"\r\n                      name=\"imgUrl\"\r\n                      id=\"imgUrl\"\r\n                      cols=\"30\"\r\n                      rows=\"3\"\r\n                      required\r\n                      className=\"peer rounded-md input-sm border-gray-400 focus:ring focus:ring-indigo-200 focus:border-indigo-300 my-2 w-full max-w-xs \"\r\n                      // placeholder=\"Admin Id\"\r\n                    ></input>\r\n                  </div>\r\n                  <div className=\"flex flex-col m-3\">\r\n                    <label className=\"text-md md:text-sm\" for=\"socials\">\r\n                      Social Media*\r\n                    </label>\r\n                    <input\r\n                    onChange={titleChangeHandler}\r\n                      type=\"text\"\r\n                      name=\"socials\"\r\n                      id=\"socials\"\r\n                      cols=\"30\"\r\n                      rows=\"3\"\r\n                      required\r\n                      className=\"peer rounded-md input-sm border-gray-400 focus:ring focus:ring-indigo-200 focus:border-indigo-300 my-2 w-full max-w-xs \"\r\n                      // placeholder=\"Admin Id\"\r\n                    ></input>\r\n                  </div>\r\n                \r\n                  <div className=\"flex flex-col m-3\">\r\n                    <label className=\"text-md md:text-sm\" for=\"socialUrl\">\r\n                      Social Url*\r\n                    </label>\r\n                    <input\r\n                    onChange={titleChangeHandler}\r\n                      type=\"url\"\r\n                      name=\"socialUrl\"\r\n                      id=\"socialUrl\"\r\n                      cols=\"30\"\r\n                      rows=\"3\"\r\n                      required\r\n                      className=\"peer rounded-md input-sm border-gray-400 focus:ring focus:ring-indigo-200 focus:border-indigo-300 my-2 w-full max-w-xs \"\r\n                      // placeholder=\"Admin Id\"\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* submit button */}\r\n              <div>\r\n                <div className=\"flex flex-row justify-end md:mx-8\">\r\n                  <button type=\"submit\" className=\"btn  m-1 text-xs\">Cancel</button>\r\n                  <button type=\"submit\" className=\"btn  text-xs btn-primary m-1\">Submit</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n",{"ruleId":"52","severity":1,"message":"53","line":92,"column":5,"nodeType":"54","messageId":"55","endLine":110,"endColumn":6,"fix":"56"},{"ruleId":"57","severity":1,"message":"58","line":20,"column":11,"nodeType":"59","messageId":"60","endLine":20,"endColumn":28},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"61","text":"62"},"no-unused-vars","'dateChangeHandler' is defined but never used.","Identifier","unusedVar",[3253,3253]," rel=\"noreferrer\""]